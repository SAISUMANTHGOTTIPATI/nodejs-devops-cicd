version: '3.8'

services:
  api1:
    build:
      context: ./http-api1
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: mydatabase
      API2_BASE_URL: http://api2:3000
    depends_on:
      mysql:
        condition: service_healthy
    command: ["/usr/wait-for-mysql.sh", "mysql", "node", "index.js"]
    networks:
      - my_network

  api2:
    build:
      context: ./http-api2
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
    command: ["/usr/wait-for-mysql.sh", "mysql", "node", "index.js"]
    networks:
      - my_network

  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  my_network:
    driver: bridge

volumes:
  mysql-data:
